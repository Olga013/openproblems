name: Run Benchmark

on:
  push:
    tags:
      - '*'
    branches:
      - 'test_benchmark'
      - 'infrastructure/nextflow'

jobs:
  run_benchmark:
    runs-on: ${{ matrix.config.os }}

    env:
      RUN_ID: "${{ github.workflow}}_${{ github.run_number }}"

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: 'current', os: ubuntu-latest, python: '3.8', java_version: 15 }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y libhdf5-dev pandoc gfortran libblas-dev liblapack-dev libedit-dev llvm-dev

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Set up Java ${{ matrix.java_version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{matrix.config.java_version}}
        architecture: x64

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{runner.os}}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: ${{runner.os}}-pip-${{ env.pythonLocation }}-

    - name: Install Nextflow
      env:
          CAPSULE_LOG: none
      run: |
        mkdir /tmp/nextflow
        cd /tmp/nextflow
        wget -qO- get.nextflow.io | bash
        sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow

    - name: Install AWS CLI
      run: |
        mkdir /tmp/awscli
        cd /tmp/awscli
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

    - name: Set up S3FS
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        sudo apt-get install s3fs
        echo $AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY > ~/.passwd-s3fs
        chmod 600 ~/.passwd-s3fs
        sudo mkdir -p /mnt/openproblems-nextflow
        sudo chown $USER /mnt/openproblems-nextflow
        s3fs openproblems-nextflow /mnt/openproblems-nextflow

    - name: Install package & dependencies
      run: |
        python -m pip install --upgrade "pip<=21.0"
        pip install --use-deprecated=legacy-resolver -U wheel setuptools
        pip install --use-deprecated=legacy-resolver -U .
        python -c "import openproblems"

    - name: Run benchmark
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TOWER_ACCESS_TOKEN: ${{ secrets.TOWER_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        nextflow run singlecellopenproblems/nf-openproblems -r master -with-tower -profile aws -work-dir "/mnt/openproblems-nextflow/work${RUN_ID}" -bucket-dir s3://openproblems-nextflow/benchmark

    - name: Remove working directory
      if: always()
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        aws s3 rm "s3://openproblems-nextflow/work${RUN_ID}"


    - name: Upload results on success
      env:
        GH_USERNAME: ${{ secrets.GH_USERNAME }}
        GH_PASSWORD: ${{ secrets.GH_PASSWORD }}
      run: |
        git remote set-url origin https://${GH_USERNAME}:${GH_PASSWORD}@github.com/${GITHUB_REPOSITORY}.git
        git checkout -B master
        git pull origin master
        git add results.md
        git add website/data/results
        git config user.name "Github Actions"
        git config user.email "singlecellopenproblems@protonmail.com"
        git commit -m "Update results for ${GITHUB_REF} - ci skip"
        git push origin master

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: check
